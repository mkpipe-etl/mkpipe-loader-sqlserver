# Usage command: ruff check --fix
# ruff format --config .ruff.toml 
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "env"
]

# Include .ipynb files to ensure Jupyter notebooks are also linted.
extend-include = ["*.ipynb"]

# Configure Black-like formatting settings.
line-length = 88
indent-width = 4
target-version = "py312"

# Enable specific linting categories and configure error handling.
[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]  # Pyflakes (`F`) and key pycodestyle (`E`) rules
ignore = []  # Define any rules to ignore here, e.g., ["E203", "W503"] for Black compatibility

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]  # Allow all enabled rules to be automatically fixed
unfixable = []

# Allow underscore-prefixed names for unused variables, commonly used for throwaway values.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Define formatting preferences.
[format]
# double,single
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
